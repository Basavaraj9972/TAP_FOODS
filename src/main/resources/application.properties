# Gmail SMTP Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=basavarajkalyani976@gmail.com
spring.mail.password=***REMOVED***
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

twilio.account.sid=***REMOVED***
twilio.auth.token=***REMOVED***
twilio.phone.number=+18577632891


server.port=8080

# Google OAuth Configuration
spring.security.oauth2.client.registration.google.client-id=34570249745-gh86oneet4749vgo9cuabrupkdcpct42.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email

# Redirect users to React frontend after login
spring.security.oauth2.client.redirect-uri=http://localhost:8080/login/oauth2/code/google

#http://localhost:8080/login/oauth2/code/google
# Logout redirection
spring.security.oauth2.client.logout-url=http://localhost:8080/logout

spring.redis.host=localhost
spring.redis.port=6379
spring.cache.type=redis

#spring.datasource.url=jdbc:mysql://localhost:3306/emssytem
spring.datasource.url=jdbc:mysql://localhost:3306/emssytem?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Kolkata
#spring.datasource.url=jdbc:mysql://localhost:3306/emssystem?useSSL=true&requireSSL=true&verifyServerCertificate=true&clientCertificateKeyStoreUrl=file:/path/to/client-keystore.p12&clientCertificateKeyStorePassword=yourpass&trustCertificateKeyStoreUrl=file:/path/to/truststore.p12&trustCertificateKeyStorePassword=yourpass
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.platform=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

server.servlet.session.cookie.secure=true  
# Enable secure cookies (only for HTTPS)
server.servlet.session.cookie.http-only=true  
# Prevent JavaScript access to cookies
server.servlet.session.cookie.same-site=NONE  
# Allow cross-site requests

spring.web.resources.static-locations=classpath:/static/
# Groq AI API base URL (updated)
groq.base-url=https://api.groq.com/v1/chat

# Groq AI API Key
groq.api-key=***REMOVED***

#
#spring.datasource.url=jdbc:mysql://localhost:3306/emssytem?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
##Hibernate properies
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
##created, created-drop 
#spring.jpa.open-in-view=false
#spring.jpa.hibernate.ddl-auto=update

# Http to covert https for security SSL below line added
#server.ssl.enabled=true
#server.ssl.key-store=classpath:securewebsite.p12
#server.ssl.key-store-password=123456
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=securewebsite

